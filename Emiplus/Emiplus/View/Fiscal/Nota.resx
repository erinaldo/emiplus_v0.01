<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>